<?php

//Constantes para armazenamento das variáveis de conexão.
    define('HOST', '127.0.0.1');
    define('DBNAME', 'test');
    define('USER', 'user');
    define('PASSWORD', 'psswd');

//Conectando com o Servidor
$conn = mysqli_connect(HOST, USER, PASSWORD, DBNAME) or die( ' Não foi possível conectar.' );

//Realizando uma consulta no BD
    $instrucaoSQL = "Select nome, cpf, telefone From Cliente";
    $stmt = mysqli_prepare($conn, $instrucaoSQL);
    mysqli_stmt_bind_result($stmt, $nome, $cpf, $tel);
    mysqli_stmt_execute($stmt);

while (mysqli_stmt_fetch($stmt)) {
	echo $nome . "\t";
	echo $cpf . "\t";
	echo $tel . "\n";
}

//Encerrando a conexão
mysqli_close($conn);



A linguagem PHP também possui uma série de métodos e funções, habilitados
 através da extensão pgsql, para conexão com o PostgreSQL.


A exemplo do que fizemos com o MySQL, vejamos um código que utiliza funções
 PHP para conectar com o PostgreSQL e realizar uma instrução SQL de consulta de dados.


    <?php

    //Constantes para armazenamento das variáveis de conexão.

        define('HOST', '127.0.0.1');
        define('DBNAME', 'test');
        define('USER', 'user');
        define('PASSWORD', 'psswd');

    //Conectando com o Banco de dados

    $stringConn = "host=".HOST." dbname=".DBNAME." user=".USER." password=".PASSWORD;
    $conn = pg_connect($stringConn) or die( ' Ocorreu um erro e não foi possível conectar ao banco de dados.' );

    //Realizando uma consulta no BD

    $instrucaoSQL = "Select nome, cpf, telefone From Cliente";
    $result = pg_query( $conn, $instrucaoSQL ) or die(' Ocorreu um erro na execução da instrução: ' . $instrucaoSQL );

    //pg_query($dbcon, "SELECT id, nome FROM clientes");

    //Imprimindo os dados da consulta

    while ($row = pg_fetch_array( $result )){
        echo $row['nome'] . "\t";
        echo $row['cpf'] . "\t";
        echo $row['telefone'] . "\n";
    }

    //Encerrando a conexão

    pg_close($conn);



                 Conceitos básicos da linguagem de programação PHP


A linguagem PHP é uma linguagem server side, ou seja, atua no lado servidor, sobre 
um servidor web como o Apache, Nginx ou IIS. Trata-se de uma linguagem de script e 
que é gratuita, o que faz dela uma linguagem amplamente utilizada no ambiente web.


Em relação à sua sintaxe, é possível combinar código PHP com tags HTML, ou utilizar
 apenas código PHP em um script. Tal código deverá estar entre a tag inicial “ ” – 
 sendo essa última não obrigatória, quando houver apenas código PHP em um script.


Tomando como base os exemplos de código anteriores, temos alguns recursos da linguagem 
sendo utilizados. A seguir, esses recursos serão revistos:



Constantes

As constantes são identificadores ou nomes que contêm um valor único e imutável, ao 
contrário das variáveis que, conforme o nome indica, possuem valor variável ao longo 
de um programa.
 

No exemplo, foram declaradas constantes para armazenarem as credenciais de acesso ao SGBD. 
A sintaxe de utilização de constantes é composta pela palavra reservada DEFINE, seguida de
 parênteses, onde são incluídos o nome da constante e o seu valor.


Variáveis

As variáveis são objetos, ou espaços reservados na memória do computador, destinados a
 armazenarem e a exibirem os dados utilizados, e alterados, durante a execução de um
  programa.
 

Em PHP, as variáveis são representadas por um $ seguido pelo seu nome, que é
 case-sensitive, ou seja, uma letra maiúscula é diferente de uma letra minúscula
  ($var é diferente de $Var). Em relação à declaração e atribuição de valores,
   ambos os processos podem ocorrer ao mesmo tempo. Veja no último exemplo que 
   a variável $stringConn foi declarada (inserida pela primeira vez no código) 
   ao mesmo tempo que recebeu um valor (processo de atribuição). Por último, as
    variáveis em PHP não possuem tipo. Logo, não é necessário indicar o tipo de
     dado a ser armazenado por uma variável.


Estruturas de decisão e repetição

Nos exemplos, foi vista a estrutura de repetição while. Além dela, há outras
 estruturas de repetição disponíveis em PHP: do-while, for e foreach.
 

A respeito das estruturas de decisão, estão disponíveis em PHP: if, else, elseif e switch.


Arrays

Os arrays, ou vetores, são variáveis que guardam uma lista de itens relacionados. Tais 
variáveis são compostas pelo par índice/valor. A variável $row, nos exemplos, é um array
 associativo, ou seja, seus índices são compostos por strings – o nome de cada coluna selecionada
  do banco de dados. Há ainda os arrays numéricos e os híbridos (arrays com índices associativos e numéricos).


Funções

As funções são pedaços de código que podem ser chamados a partir de qualquer parte do 
programa e que executam tarefas específicas. Além das funções definidas pelo usuário, 
em PHP estão disponíveis inúmeras funções nativas. Em nossos exemplos, temos as funções 
define e echo, além das relacionadas à conexão e ao manuseio de dados, como mysql_connect
 ou pg_connect, mysql_query ou pg_query, entre outras.


Extensões, bibliotecas e classes

As extensões, bibliotecas e classes são um importante recurso presente na maioria das
 linguagens de programação. Através delas, é possível estender as funções básicas de 
 uma linguagem, adicionando novos recursos para a execução de determinadas tarefas.

Em relação à definição, em PHP, temos as extensões, que são arquivos binários (no S.O.
 Windows, as .dll, em S.O.s unix-like, os .so) que contêm bibliotecas. Já as bibliotecas 
 são um conjunto de funções e/ou classes. As classes, então, dentro do paradigma 
 de orientação a objetos, são um conjunto de códigos compostos por atributos e métodos.
  São exemplos de extensões os drivers para os SGBDs MySQL e PostgreSQL, que, quando habilitados,
   permitem a sua utilização com o PHP.



   De fato, pode-se estabelecer a conexão com banco de dados PostgreSQL a partir da instanciação de objeto de PDO, 
   passando os parâmetros
 de acesso ao banco, como localização, porta, nome do banco, além de login e senha de acesso. Porém, a linha
  de código apresentada possui um erro relacionado à falta do prefixo do driver de banco de dados "pgsql:" no 
  início da string do construtor PDO. Sem esse prefixo, a aplicação não saberá que está tentando se conectar a 
  um banco de dados PostgreSQL, resultando em uma falha de conexão. Para corrigir o erro, deve-se incluir "pgsql:" 
  no início da string do parâmetro do construtor. A linha corrigida ficaria da seguinte forma:
 

$dsn = new PDO("pgsql:host=". HOST . ";port=".PORT.";dbname=" . DBNAME .";user=" . USER . ";password=" . PASSWORD);
 

Após corrigida, a linha de código criará uma conexão com o banco de dados PostgreSQL utilizando os parâmetros 
ornecidos na instanciação do objeto PDO, permitindo que a aplicação PHP se conecte com o banco de dados.

Estudos de integração